{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["TodoInfo","title","className","UserInfo","name","email","href","TodoList","todos","map","todo","classNames","completed","user","id","username","userId","usersFromServer","find","App","useState","setTitle","setUser","listTodo","setListTodo","errorTitle","setErrorTitle","errorUser","setErrorUser","onSubmit","event","preventDefault","action","method","type","placeholder","value","onChange","target","disabled","someUser","onClick","newTodo","length","item","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9968a405.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  title: string;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ title }) => (\n  <h2 className=\"TodoInfo__title\">{title}</h2>\n);\n","import React from 'react';\n\ntype Props = {\n  name: string;\n  email: string;\n};\n\nexport const UserInfo:React.FC<Props> = ({ name, email }) => (\n  <a className=\"UserInfo\" href={email}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n\n      <article\n        className={classNames('TodoInfo',\n          { 'TodoInfo--completed': todo.completed })}\n        key={todo.id}\n      >\n        <TodoInfo title={todo.title} />\n\n        { todo.user\n        && <UserInfo name={todo.user.name} email={todo.user.email} />}\n\n      </article>\n    ))}\n  </section>\n\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [listTodo, setListTodo] = useState(todos);\n\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const newTodoAdd = () => {\n    if (!title) {\n      setErrorTitle(true);\n    }\n\n    if (!user) {\n      setErrorUser(true);\n    }\n\n    if (!title || !user) {\n      return;\n    }\n\n    const newTodo = {\n      id: listTodo.length + 1,\n      title,\n      completed: false,\n      userId: user,\n      user: usersFromServer.find(item => item.id === user) || null,\n    };\n\n    setListTodo((prev) => [...prev, newTodo]);\n    setTitle('');\n    setUser(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={(event) => event.preventDefault()}\n        action=\"/api/users\"\n        method=\"POST\"\n\n      >\n        <div className=\"field\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setErrorTitle(false);\n            }}\n          />\n\n          {errorTitle\n          && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          {'User: '}\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={(event) => {\n              setUser(+event.target.value);\n              setErrorUser(false);\n            }}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {\n              usersFromServer.map(someUser => (\n                <option\n                  value={someUser.id}\n                  key={someUser.id}\n                >\n                  {someUser.name}\n                </option>\n              ))\n            }\n          </select>\n\n          {errorUser\n           && (\n             <span className=\"error\">\n               Please choose a user\n             </span>\n           )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={newTodoAdd}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={listTodo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}